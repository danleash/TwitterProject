@page "/"
@using Microsoft.AspNetCore.SignalR.Client
@using TwitterProject.Client.Services
@using TwitterProject.Shared.Models
@inject SignalRService _signalRService

<div class="row justify-content-center">
    <div class="col-10">
        <PageTitle>Twitter Live Stream</PageTitle>

        <div class="filter-form">
            <EditForm EditContext="EditContext" OnSubmit="OnLanguageCodeChanged">
                <div class="row">
                    <div class="offset-6 col-md-4 align-self-end">
                        <InputSelect class="form-select d-flex" @bind-Value="LanguageFilter" @onchange="OnLanguageCodeChanged">
                            <option value="">None</option>
                            @foreach (var codestr in LanguageCodes)
                            {
                                <option value="@codestr">@codestr</option>
                            }
                        </InputSelect>
                    </div>
                    <div class="col-md-2">
                        <button class="btn btn-outline-primary col-2" type="submit">Filter</button>
                    </div>
                </div>
            </EditForm>
        </div>


        @if (MetricModel != null && MetricModel.HashTagPairs != null)
        {
            <div class="hashtag-card justify-content-center col-4">
                @if (MetricModel.TweetCount != 0)
                {
                    <h1 class="px-2 py-2 hashtag-header">Trending Hashtags</h1>
                    <div class="px-2 py-2">
                        @foreach (var item in MetricModel.HashTagPairs)
                        {
                            <p>#@item.Key Used @item.Value times</p>
                        }
                    </div>
                    <div class="px-2 py-2">
                        Count: @MetricModel.TweetCount
                    </div>
                }
                else
                {
                    <span>No twitter results for language: @LanguageFilter</span>
                }
            </div>
        }
    </div>
</div>

@code {
    private int TweetCount { get; set; }
    private TweetMetricStreamModel MetricModel { get; set; } = new();
    public string LanguageFilter = string.Empty;
    private List<TweetModel> Tweets { get; set; } = new();
    private EditContext EditContext { get; set; }
    private List<string> LanguageCodes = new List<string> {
            "ar","cs","da","de","el","en","es","fi","fr","he","hi","hu","id","it","ja","ko","nl","no","pl", "pt","ro","ru","sk","sv","th","tr","zh"
 };
    protected override void OnInitialized()
    {
        EditContext = new EditContext(LanguageCodes);
        _signalRService.TweetMetricReceived += OnMetricsReceived;
        _signalRService.TweetReceived += OnTweetReceived;
        _signalRService.StartSignalRStream();
    }
    private async void OnMetricsReceived(TweetMetricStreamModel model)
    {
        MetricModel = model;
        await InvokeAsync(StateHasChanged);
    }
    private async void OnTweetReceived(TweetModel model)
    {
        Tweets.Add(model);
        await InvokeAsync(StateHasChanged);
    }
    private async void OnLanguageCodeChanged()
    {
        Tweets.Clear();
        MetricModel = new();
        await InvokeAsync(StateHasChanged);
        _signalRService.SetLanguageFilter(LanguageFilter);
        await InvokeAsync(StateHasChanged);
    }
}
